@mixin border-radius($radius: 5px) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;
}

@mixin border-radius-custom($topleft: 5px, $topright: 5px, $bottomleft: 5px, $bottomright: 5px) {
  -webkit-border-radius: $topleft $topright $bottomright $bottomleft;
  -moz-border-radius: $topleft $topright $bottomright $bottomleft;
  border-radius: $topleft $topright $bottomright $bottomleft;
}

@mixin box-shadow($x: 0px, $y: 3px, $blur: 5px, $spread: 0px, $alpha: 0.5) {
  -webkit-box-shadow: $x $y $blur $spread rgba(0, 0, 0, $alpha);
  -moz-box-shadow: $x $y $blur $spread rgba(0, 0, 0, $alpha);
  box-shadow: $x $y $blur $spread rgba(0, 0, 0, $alpha);
}

@mixin box-shadow-color($x: 0px, $y: 3px, $blur: 5px, $spread: 0px,$r:0,$g:0,$b:0, $alpha: 0.5) {
  -webkit-box-shadow: $x $y $blur $spread rgba($r, $g, $b, $alpha);
  -moz-box-shadow: $x $y $blur $spread rgba($r, $g, $b, $alpha);
  box-shadow: $x $y $blur $spread rgba($r, $g, $b, $alpha);
}


@mixin transition($prop: all, $time: 1s, $ease: linear) {
  -webkit-transition: $prop $time $ease;
  -moz-transition: $prop $time $ease;
  -o-transition: $prop $time $ease;
  -ms-transition: $prop $time $ease;
  transition: $prop $time $ease;
}

@mixin transform($rotate: 90deg, $scale: 1, $skew: 1deg, $translate: 10px) {
  -webkit-transform: rotate($rotate) scale($scale) skew($skew) translate($translate);
  -moz-transform: rotate($rotate) scale($scale) skew($skew) translate($translate);
  -o-transform: rotate($rotate) scale($scale) skew($skew) translate($translate);
  -ms-transform: rotate($rotate) scale($scale) skew($skew) translate($translate);
  transform: rotate($rotate) scale($scale) skew($skew) translate($translate);
}

@mixin gradient($origin: left, $start: #ffffff, $stop: #000000) {
  background-color: $start;
  background-image: -webkit-linear-gradient($origin, $start, $stop);
  background-image: -moz-linear-gradient($origin, $start, $stop);
  background-image: -o-linear-gradient($origin, $start, $stop);
  background-image: -ms-linear-gradient($origin, $start, $stop);
  background-image: linear-gradient($origin, $start, $stop);
}

@mixin quick-gradient($origin: left, $alpha: 0.2) {
  background-image: -webkit-linear-gradient($origin, rgba(0, 0, 0, 0.0), rgba(0, 0, 0, $alpha));
  background-image: -moz-linear-gradient($origin, rgba(0, 0, 0, 0.0), rgba(0, 0, 0, $alpha));
  background-image: -o-linear-gradient($origin, rgba(0, 0, 0, 0.0), rgba(0, 0, 0, $alpha));
  background-image: -ms-linear-gradient($origin, rgba(0, 0, 0, 0.0), rgba(0, 0, 0, $alpha));
  background-image: linear-gradient($origin, rgba(0, 0, 0, 0.0), rgba(0, 0, 0, $alpha));
}

@mixin reflect($length: 50%, $opacity: 0.2) {
  -webkit-box-reflect: below 0px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop($length, transparent), to(rgba(255, 255, 255, $opacity)));
}


@mixin animation($name: none, $duration: 0, $timing-function: ease, $delay: 0, $iteration-count: 1, $direction: normal) {
  -webkit-animation: $name $duration $timing-function $delay $iteration-count $direction;
  -moz-animation: $name $duration $timing-function $delay $iteration-count $direction;
  -ms-animation: $name $duration $timing-function $delay $iteration-count $direction;
  -o-animation: $name $duration $timing-function $delay $iteration-count $direction;
  animation: $name $duration $timing-function $delay $iteration-count $direction;
}

@mixin transform-rotate($angle: 0deg) {
  -webkit-transform: rotate($angle);
  -ms-transform: rotate($angle);
  transform: rotate($angle);
}

@mixin transform-translate($x-axis: 0, $y-axis: 0) {
  -webkit-transform: translate($x-axis, $y-axis);
  -ms-transform: translate($x-axis, $y-axis);
  transform: translate($x-axis, $y-axis);
}

@mixin transform-rotateY($angle: 0deg) {
  -webkit-transform: rotateY($angle);
  transform: rotateY($angle);
}

@mixin transform-origin($origin-x-axis: 50%, $origin-y-axis: 50%, $origin-z-axis: 0) {
  -webkit-transform-origin: $origin-x-axis $origin-y-axis $origin-z-axis;
  -ms-transform-origin: $origin-x-axis $origin-y-axis $origin-z-axis;
  transform-origin: $origin-x-axis $origin-y-axis $origin-z-axis;
}

@mixin opacity($opacity: 1) {
  zoom: 1;
  filter: alpha(opacity=$opacity * 100);
  opacity: ($opacity * 1.0);
}

@mixin backface-visibility($visibility: hidden) {
  -webkit-backface-visibility: $visibility;
  -moz-backface-visibility: $visibility;
  -ms-backface-visibility: $visibility;
  backface-visibility: $visibility;
}

@mixin perspective($pixels: none) {
  -webkit-perspective: $pixels;
  -moz-transform: perspective($pixels+px);
  perspective: $pixels;
  -moz-transform-style: preserve-3d;
}

@mixin transform-style($style: flat) {
  -webkit-transform-style: $style;
  transform-style: $style;
}

@mixin shadow($offsetX, $offsetY, $blur, $color) {
  -webkit-filter: drop-shadow($offsetX+px $offsetY+px $blur+px $color);
  //  filter: url(#drop-shadow);
  -ms-filter: "progid:DXImageTransform.Microsoft.Dropshadow(OffX=" + $offsetX + ", OffY=" + $offsetY + ", Color='" + $color + "')";
  filter: "progid:DXImageTransform.Microsoft.Dropshadow(OffX=" + $offsetX + ", OffY=" + $offsetY + ", Color='" + $color + "')";
}

@mixin transition-duration($duration:0.6s) {
  -webkit-transition: $duration;
  -moz-transition: $duration;
  transition: $duration;
}

